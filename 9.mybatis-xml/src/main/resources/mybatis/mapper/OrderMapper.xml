<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.robinzhu.mybatis_xml.mapper.OrderMapper">
    <resultMap id="OrderUserResultMap" type="Order" autoMapping="true">
        <result column="id" property="orId" />
        <result column="user_id" property="userId" />
        <result column="order_no" property="orderNo" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
        <association property="user" javaType="User" resultMap="com.robinzhu.mybatis_xml.mapper.UserMapper.BaseResultMap" autoMapping="true">
            <result column="user_id" property="id" />
        </association>
    </resultMap>

    <resultMap id="OrderUserDetailResultMap" type="Order">
        <result column="or_id" property="orId" />
        <result column="user_id" property="userId" />
        <result column="order_no" property="orderNo" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
        <!--association:完成子对象的映射-->
        <!--property:子对象在父对象中的属性名-->
        <!--javaType:子对象的java类型-->
        <!--autoMapping:完成子对象的自动映射，若开启驼峰，则按驼峰匹配-->
        <!--resultMap需要设置为UserMapper的BaseResultMap，否则返回字段不全-->
        <association property="user" javaType="User" resultMap="com.robinzhu.mybatis_xml.mapper.UserMapper.BaseResultMap" autoMapping="true">
            <result column="u_id" property="id" />
        </association>
        <!--
        如果属性是集合使用collection，javaType集合的类型，ofType表示集中的存储的元素类型
        <setting name="lazyLoadingEnabled" value="true" />
        layLoadingEnabled:true使用延迟加载，false禁用延迟加载。延迟加载的意义在于，虽然是关联查询，但不是及时将关联的数据查询出来，而且在需要的时候进行查询。
        -->
        <collection property="detailList" javaType="List" ofType="OrderDetail" resultMap="com.robinzhu.mybatis_xml.mapper.OrderDetailMapper.orderDetailResultMap" autoMapping="true">
            <result column="order_num" property="orderNum"/>
        </collection>
    </resultMap>

    <select id="queryOrderWithUserByOrderNo" resultMap="OrderUserResultMap">
        select * from tb_order o left join user u on o.user_id = u.u_id where o.order_no = #{orderNo}
    </select>

    <insert id="createOrder" parameterType="Order">
        <selectKey keyColumn="id" keyProperty="id" resultType="string" order="BEFORE">
            select replace(uuid(), '-', '')
        </selectKey>
        insert into `tb_order`(or_id, user_id, order_no, create_time, update_time) values (#{id}, #{userId}, #{orderNo}, now(), now());
    </insert>

    <select id="queryOrderWithUserAndDetailByOrderNo" resultMap="OrderUserDetailResultMap">
        select * from tb_order
            left join user on tb_order.user_id = user.u_id
            left join tb_order_detail on tb_order_detail.order_num = tb_order.order_no
        where tb_order.order_no = #{orderNo};
    </select>
</mapper>